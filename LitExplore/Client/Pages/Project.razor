@page "/project"
@inject HttpClient Http
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager MyNavigationManager


<PageTitle>Project</PageTitle>
<h1 style="color: white;">ProjectTitle</h1>

<div class="content">
    <div class="collaborators">
        <h3>Collaborators</h3>
        <ul>
            <li>Henning</li>
            <li>Flemming</li>
        </ul>
        <button Id="addCollab" class="adder" @onclick="@(() => AddCollaborator.Show())">+</button>
        <BSTooltip Target="addCollab" Placement="Placement.Bottom">Add collaborator</BSTooltip>
    </div>
    <div class="litterature">
        <h3>Project Litterature</h3>
        <ul>
            <li>En bog</li>
            <li>En anden bog</li>
        </ul>
        <p>@(MyNavigationManager.Uri)</p>
        <p>@GetQueryParm("projectId")</p>
        <button Id="addLit" class="adder" @onclick="@(() => AddLitterature.Show())">+</button>
        <BSTooltip Target="addLit" Placement="Placement.Bottom">Add litterature</BSTooltip>
    </div>
</div>

<BSModal @ref="AddLitterature" Size="Size.Large">
    <BSModalHeader OnClick="@(() => AddLitterature.Hide())">Add a paper to the project</BSModalHeader>
	<BSModalBody>
    <BSTabGroup>	
    <BSTabList IsPills="true" IsList="true">
        <BSTab>
            <BSTabLabel>Search</BSTabLabel>
            <BSTabContent>Search</BSTabContent>
        </BSTab>
        <BSTab>
            <BSTabLabel>Recommended</BSTabLabel>
            <BSTabContent>rec</BSTabContent>
        </BSTab>
    </BSTabList>
    <BSTabSelectedContent/>
</BSTabGroup>
</BSModalBody>
</BSModal>

<BSModal @ref="AddCollaborator" Size="Size.Large">
    <BSModalHeader OnClick="@(() => AddCollaborator.Hide())">Add a collaborator to the project</BSModalHeader>
    <BSModalBody>
        <p>Search for a user to add as a collaborator.</p>
        <BSBasicInput InputType="InputType.Text" @ref="UserSearchInput" Value="UserSearchTerm" ValueChanged="@((string value) => SelectedChanged(value))" ValidateOnInput="true" Placeholder="Enter username"/>
    </BSModalBody>
</BSModal>

@code {
    private BSModal AddLitterature;
    private BSModal AddCollaborator;
    private ProjectDetailsDTO project;
    private BSBasicInput<string> UserSearchInput;
    
    private string UserSearchTerm = string.Empty;

    [Parameter]
    public string Id { get; set; }

    protected void SelectedChanged(string e)
    {
        UserSearchTerm = e;
    }

    string GetQueryParm(string parmName)
    {
        var uriBuilder = new UriBuilder(MyNavigationManager.Uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        return q[parmName] ?? "";
    }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            var ProjectId = GetQueryParm("projectId");
            project = await Http.GetFromJsonAsync<ProjectDetailsDTO>($"api/Project/ProjectId/{ProjectId}");
            Console.WriteLine(project);
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }


}